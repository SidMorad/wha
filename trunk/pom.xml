<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.hajari.wha</groupId>
	<artifactId>wha</artifactId>
	<packaging>war</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<name>wha</name>

    <prerequisites>
        <maven>2.0.9</maven>
    </prerequisites>
	
   	<organization>
     	<name>Hajari MultiTasking, Inc</name>
      	<url>http://www.hajari.nl/</url>
    </organization>
    <inceptionYear>2009</inceptionYear>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
	
    <!-- Note when doing releases: tagBase is set in release plugin configuration below -->
    <scm>
        <connection>scm:svn:http://wha.googlecode.com/svn/trunk</connection>
        <developerConnection>scm:svn:https://wha.googlecode.com/svn/trunk</developerConnection>
        <url>https://wha.googlecode.com/svn/trunk</url>
    </scm>

	<!-- Note when using maven-release-plugin then release:perform would use below
		configuration to deploy war file to the host. (currently we don't use this feature) -->
	<distributionManagement>
		<repository>
			<id>gcode-releases</id>
			<name>Google Code Releases</name>
			<url>https://wha.googlecode.com/svn/m2repo</url>
		</repository>
	</distributionManagement>

    <issueManagement>
        <system>gcode</system>
        <url>http://code.google.com/p/wha/issues/list</url>
    </issueManagement>
    <!-- <ciManagement>
        <system>bamboo</system>
        <url>https://build.host/browse/WHA</url>
    </ciManagement> -->

	<developers>
		<developer>
			<id>smoradi</id>
			<name>Saeid Moradi</name>
			<email>sid.moradi@gmail.com</email>
			<timezone>+10</timezone>
		</developer>
		<developer>
			<id>bnobakht</id>
			<name>Behrooz Nobakht</name>
			<email>behrooz.nobakht@gmail.com</email>	
			<timezone>+1</timezone>
		</developer>
	</developers>
	
	<repositories>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.milestone</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Milestones</name>
			<url>http://repository.springsource.com/maven/bundles/milestone</url>
		</repository>

		<!--  required for some plugins that depend on snapshots :( -->
		<repository>
			<id>com.springsource.repository.bundles.snapshot</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Snapshots</name>
			<url>http://repository.springsource.com/maven/bundles/snapshot</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external.snapshots</id>
			<name>SpringSource Enterprise Bundle Repository - Third Party External Bundle Snapshots</name>
			<url>http://private.repository.springsource.com.s3.amazonaws.com/maven/bundles/external</url>
		</repository>

	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</pluginRepository>
		<pluginRepository>
			<id>com.springsource.repository.bundles.milestone</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Milestones</name>
			<url>http://repository.springsource.com/maven/bundles/milestone</url>
		</pluginRepository>	
	</pluginRepositories>

	<dependencies>
		<!-- General dependencies for standard applications -->
		<dependency>
			<groupId>org.junit</groupId>
			<artifactId>com.springsource.org.junit</artifactId>
			<version>4.5.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.log4j</groupId>
			<artifactId>com.springsource.org.apache.log4j</artifactId>
			<version>1.2.15</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>com.springsource.org.aspectj.runtime</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<version>2.5.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- ROO dependencies -->
		<dependency>
			<groupId>org.springframework.roo</groupId>
			<artifactId>org.springframework.roo.annotations</artifactId>
			<version>1.0.0.RC3</version>
			<scope>provided</scope>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.transaction</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>com.springsource.org.hsqldb</artifactId>
			<version>1.8.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>com.springsource.org.hibernate.annotations</artifactId>
			<version>3.3.1.ga</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>com.springsource.org.hibernate.ejb</artifactId>
			<version>3.3.2.GA</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.ehcache</groupId>
			<artifactId>com.springsource.net.sf.ehcache</artifactId>
			<version>1.4.1</version>
		</dependency>
		<dependency>
			<groupId>edu.emory.mathcs.backport</groupId>
			<artifactId>com.springsource.edu.emory.mathcs.backport</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.log4j</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>com.springsource.javax.persistence</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.api</artifactId>
			<version>1.5.6</version>
		</dependency>


		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>com.springsource.javax.transaction</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.dbcp</artifactId>
			<version>1.2.2.osgi</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web.servlet</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>org.springframework.js</artifactId>
			<version>2.0.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.fileupload</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>com.springsource.org.tuckey.web.filters.urlrewrite</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet.jsp.jstl</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>com.springsource.org.apache.tiles</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>com.springsource.org.apache.tiles.jsp</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>com.springsource.org.apache.tiles.core</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.el</groupId>
			<artifactId>com.springsource.org.apache.el</artifactId>
			<version>6.0.20</version>
		</dependency>
	    <dependency>
	            <groupId>org.springframework.security</groupId>
	            <artifactId>org.springframework.security.core</artifactId>
	            <version>3.0.0.RC1</version>
	        </dependency>
	    <dependency>
	            <groupId>org.springframework.security</groupId>
	            <artifactId>org.springframework.security.config</artifactId>
	            <version>3.0.0.RC1</version>
	        </dependency>
	    <dependency>
	            <groupId>org.springframework.security</groupId>
	            <artifactId>org.springframework.security.web</artifactId>
	            <version>3.0.0.RC1</version>
	        </dependency>
	    <dependency>
	            <groupId>org.springframework.security</groupId>
	            <artifactId>org.springframework.security.taglibs</artifactId>
	            <version>3.0.0.RC1-A</version>
	    </dependency>
		<dependency>
			<groupId>com.mysql.jdbc</groupId>
			<artifactId>com.springsource.com.mysql.jdbc</artifactId>
			<version>5.1.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context.support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>com.springsource.javax.mail</artifactId>
			<version>1.4.1</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>com.springsource.javax.activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>com.springsource.org.hibernate.validator</artifactId>
			<version>4.0.0.GA</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>com.springsource.javax.validation</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<!--
					<configuration> <webXml>target/web.xml</webXml> </configuration>
				-->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.0</version>
				<dependencies>
					<!--
						NB: You must use Maven 2.0.9 or above or these are ignored (see
						MNG-2972)
					-->
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>com.springsource.org.aspectj.runtime</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>com.springsource.org.aspectj.tools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>org.springframework.aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<junitArtifactName>org.junit:com.springsource.org.junit</junitArtifactName>
					<excludes>
						<exclude>**/*_Roo_*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.0.4</version>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Other -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>
							jar-with-dependencies
						</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.0-beta-7</version>
                <configuration>
                    <tagBase>
                        https://wha.googlecode.com/svn/tags
                    </tagBase>
                </configuration>
			</plugin>
			<!-- IDE -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<!--
					WARNING: Do not use 2.6 or above due to
					http://jira.codehaus.org/browse/MECLIPSE-538
				-->
				<version>2.5.1</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<additionalBuildcommands>
						<buildCommand>
							<name>org.eclipse.ajdt.core.ajbuilder</name>
							<arguments>
								<aspectPath>org.springframework.aspects</aspectPath>
							</arguments>
						</buildCommand>
						<buildCommand>
							<name>org.springframework.ide.eclipse.core.springbuilder</name>
						</buildCommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
						<projectnature>com.springsource.sts.roo.core.nature</projectnature>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
				</configuration>
			</plugin>
			<!-- Site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.0-beta-7</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.10</version>
			</plugin>
			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>selenium-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <suite>src/main/webapp/selenium/test-suite.xhtml</suite>
                    <browser>*firefox</browser>
                    <results>${project.build.directory}/target/selenium.txt</results>
                    <startURL>http://localhost:4444/</startURL>
                </configuration>
            </plugin>
            <plugin>
            	<groupId>org.codehaus.mojo</groupId>
            	<artifactId>dbunit-maven-plugin</artifactId>
            	<version>1.0-beta-3</version>
            	<configuration>
            		<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
            		<driver>${jdbc.driverClassName}</driver>
            		<username>${jdbc.username}</username>
            		<password>${jdbc.password}</password>
            		<url>${jdbc.url}</url>
            		<src>src/test/resources/sample-data.xml</src>
            		<type>${dbunit.operation.type}</type>
            		<schema>${dbunit.schema}</schema>
            		<skip>${skipTests}</skip>
            		<transaction>true</transaction>
            	</configuration>
            	<executions>
            		<execution>
            			<phase>test</phase>
            			<goals>
            				<goal>operation</goal>
            			</goals>
            		</execution>
            	</executions>
            	<dependencies>
            		<dependency>
            			<groupId>${jdbc.groupId}</groupId>
            			<artifactId>${jdbc.artifactId}</artifactId>
            			<version>${jdbc.version}</version>
            		</dependency>
            	</dependencies>
            </plugin>
        </plugins>
	</build>

	<profiles>
		<profile>
			<id>integration-test</id>
			<activation>
				<property>
					<name>false</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>${cargo.version}</version>
						<configuration>
							<wait>${cargo.wait}</wait>
							<container>
								<containerId>${cargo.container}</containerId>
								<home>${cargo.container.home}</home>
								<zipUrlInstaller>
									<url>${cargo.container.url}</url>
									<installDir>${installDir}</installDir>
								</zipUrlInstaller>
							</container>
							<configuration>
								<home>${project.build.directory}/${cargo.container}/container</home>
								<properties>
									<cargo.hostname>${cargo.host}</cargo.hostname>
									<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
								</properties>
							</configuration>
						</configuration>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>	
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.3</version>
						<configuration>
							<tasks>
								<taskdef resource="webtest_base_relaxed.taskdef">
									<classpath refid="maven.test.classpath" />
								</taskdef>
								<mkdir dir="target/webtest-data" />
								<!-- Delete old results file if it exists -->
								<delete file="target/webtest-data/web-tests-result.xml" />
								<!-- This is so the default will be used if no test case is specified -->
								<property name="test" value="run-all-tests" />
								<property name="i18n.classpath" value="${basedir}/src/main/webapp/WEB-INF/i18n" />
								<echo level="info">Testing '${project.build.finalName}' with locale '${user.language}'</echo>
								<ant antfile="src/test/resources/web-tests.xml" target="${test}">
								<property name="user.language" value="${user.language}" />
								<property name="webapp.name" value="${project.build.finalName}" />
								<property name="host" value="${cargo.host}" />							
								<property name="port" value="${cargo.port}" />							
								</ant> 
							</tasks>
						</configuration>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.canoo.webtest</groupId>
								<artifactId>webtest</artifactId>
								<version>${webtest.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- ================= Production Settings Profile ================= -->
        <!-- Use "-P prod" when you want to use the settings in this profile -->
        <!-- =============================================================== -->
        <profile>
            <id>prod</id>
            <properties>
		       	<dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName>
		       	<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
				<hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
		       	<jdbc.groupId>com.mysql.jdbc</jdbc.groupId>
		       	<jdbc.artifactId>com.springsource.com.mysql.jdbc</jdbc.artifactId>
		       	<jdbc.version>5.1.6</jdbc.version>
		       	<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
		       	<jdbc.url><![CDATA[jdbc:mysql://localhost/wha?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
		       	<jdbc.username>root</jdbc.username>
		       	<jdbc.password>root</jdbc.password>
            </properties>
			<build>
                <plugins>
                    <!-- Override location of data file for DbUnit to load (doesn't have negative keys) -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <configuration>
                            <src>src/test/resources/default-data.xml</src>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
		
	</profiles>

	<properties>
		<spring.version>3.0.0.RC2</spring.version>
		<aspectj.version>1.6.5.RELEASE</aspectj.version>
	
		<!-- Database settings -->
       	<dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName>
       	<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
       	<hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
       	<jdbc.groupId>com.mysql.jdbc</jdbc.groupId>
       	<jdbc.artifactId>com.springsource.com.mysql.jdbc</jdbc.artifactId>
       	<jdbc.version>5.1.6</jdbc.version>
       	<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
       	<jdbc.url><![CDATA[jdbc:mysql://localhost/wha?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
       	<jdbc.username>root</jdbc.username>
       	<jdbc.password>root</jdbc.password>
		
		<!-- WebTest & cargo properties -->
		<webtest.version>3.0</webtest.version>
		<cargo.version>1.0</cargo.version>
		<cargo.container>tomcat6x</cargo.container>
		<cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
		<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.20/bin/apache-tomcat-6.0.20.zip</cargo.container.url>
		<cargo.host>localhost</cargo.host>
		<cargo.port>8081</cargo.port>
		<cargo.wait>false</cargo.wait>
	</properties>

</project>
